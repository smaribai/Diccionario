application {
  config {
    applicationType monolith
    authenticationType jwt
    baseName Diccionario
    blueprints []
    buildTool maven
    cacheProvider ehcache
    clientFramework react
    clientPackageManager npm
    clientTheme lux
    clientThemeVariant primary
    creationTimestamp 1681887883769
    databaseType sql
    devDatabaseType postgresql
    dtoSuffix DTO
    enableGradleEnterprise false
    enableHibernateCache true
    enableSwaggerCodegen true
    enableTranslation true
    gradleEnterpriseHost ""
    jhiPrefix jhi
    jhipsterVersion "7.8.1"
    jwtSecretKey "OWViYTM3YTcwZDU5OTc5ZWNiODQ0ZDAwMzMwYmE4YjYzMWVmMDRiMDU0ZmJiNzNlY2YzYjVkMGEwYzE0YWY5ZDRhNjlkYTYzY2NmOGVmN2RmMmUwMDkyZDNmZDgwYjIwZDEwZmExNzM4NDVjMWE2NjkxZTJiYmUwNTY1ZjRkNTE="
    languages [es, en]
    messageBroker false
    nativeLanguage es
    otherModules []
    packageName com.santi.dicccionario
    prodDatabaseType postgresql
    reactive false
    searchEngine false
    serverPort 8080
    serviceDiscoveryType eureka
    skipUserManagement false
    testFrameworks []
    websocket false
    withAdminUi true
  }

  entities *
}

entity Traduccion {
  texto String required maxlength(150)
}

entity Cliente {
  idCliente String required maxlength(20)
  nombre String required maxlength(70)
  descripcion String maxlength(200)
  direccion String maxlength(200)
}
entity Control {
  nombre String
  descripcion String
}

entity Provincia {
  codigoProvincia String required maxlength(3)
  nombreProvincia String required maxlength(30)
}

entity Divisa {
  codigoDivisa String required maxlength(3)
  nombreDivisa String required maxlength(100)
}

@readOnly
entity Clasificaciones {
  cliente String required maxlength(100)
  remitente String maxlength(100)
  destinatario String maxlength(100)
  proveedor String maxlength(100)
  refRemitente String maxlength(20)
  refDestinatario String maxlength(20)
  codigoArancelarioOrigen String maxlength(20)
  descripcion String maxlength(150)
  importe Double 
  uds Integer
  peso Double  
}

entity Idioma {
  codigo String required maxlength(2)
  nombre String required maxlength(100)
}
entity Pais {
  codigoPais String required maxlength(2)
  nombrePais String required maxlength(100)
}
entity Producto {
  codigoArancelario String required maxlength(20)
  descripcion String required maxlength(500)
}
entity ProductoControles {
  descripcion String maxlength(200)
}
entity TipoCliente {
  codigo String required maxlength(3)
  nombre String required maxlength(100)
}
relationship OneToOne {
  Cliente{tipoCliente(required)} to TipoCliente
  Cliente{pais(required)} to Pais 
  Clasificaciones{paisOrigen(required)} to Pais 
  Clasificaciones{paisDestino(required)} to Pais 
  Clasificaciones{divisa(required)} to Divisa 
  Clasificaciones{idioma(required)} to Idioma 
  Clasificaciones{refCliente(required)} to Cliente 
  Clasificaciones{provinciaDestino} to Provincia
  ProductoControles{codigoArancelario(required)} to Producto 
  ProductoControles{idControl(required)} to Control 
  Traduccion{idiomaOrigen(required)} to Idioma 
  Traduccion{idiomaDestino(required)} to Idioma 
}

filter *
dto * with mapstruct
paginate Cliente, Control, Divisa, Idioma, Pais, TipoCliente with pagination
paginate Clasificaciones, Producto, ProductoControles, Provincia with infinite-scroll
service * with serviceImpl